---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Ikevink.
--- DateTime: 15/08/2018 11:07 PM
---

local WGBM = WarGod.BossMods

local bossString = "Grim Batol"
printTo(3,bossString)
WGBM[bossString] = {}

WGBM[bossString].DPSBlacklist = function(spell, unit, args)
    --print('boo')
    local unitid = unit.unitid
    --if UnitAffectingCombat(unitid) then return end  -- hoping this lets through the things that are fighting at the entrance
    local name = unit.unitid

    if WarGod.Control:SafeMode() then
        if UnitIsUnit(unitid, "mouseover") or UnitIsUnit(unitid, "target") then
            return
        end
        return true
    end


    if name == "Incorporeal Being" then return true end
    if name == "Lurking Tempest" then return true end
    return
end

WGBM[bossString].Priority = function(spell, unit, args)
    --if spell ~= "" then print('default priority') end
    local unitid = unit.unitid
    local name = unit.name
    local score = 10
    --print(unitid)
    --[[if (unit.name == "Explosives") then
        return 1000000, "default"
    elseif unit.health_percent < 0.95 and unit:BuffRemaining("Inspiring Presence", "HELPFUL") > 0 then
        return 5000, "default"
    end]]
    if name == "Turbulent Squall" then
        if unit:BuffRemaining("Storm Shield", "HELPFUL") ~= 0 then
            score = 40
        end
    elseif name == "Empyrean Assassin" then
        if unit:BuffRemaining("Vapor Form", "HELPFUL") ~= 0 then
            score = 40
        end
    end

    if UnitIsUnit("target", unitid) then
        score = score + 5
    end

    return score, bossString
end

--[[WGBM[bossString].DPSWhitelist = function(spell, unit, args)
    local unitid = unit.unitid
    local name = unit.name
    if (name == "Spirit of Gold") then
        return true
    end
end]]

WGBM[bossString].Cleanse = function(spell, unit, args)
    local toxinStacks = unit:AuraStacks("Gulp Swog Toxin", "HARMFUL")
    if toxinStacks > 6 then
        return true
    elseif toxinStacks > 0 then
        return
    else
        return true
    end
end