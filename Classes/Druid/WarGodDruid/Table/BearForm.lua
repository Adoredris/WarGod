---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Flora.
--- DateTime: 11/09/2018 9:34 PM
---

local WGBM = WarGod.BossMods

local Rotations = WarGod.Rotation
local Class = WarGod.Class
local groups = WarGod.Unit.groups
local player = WarGod.Unit:GetPlayer()
local talent = player.trait
local buff = player.buff
local WarGodUnit = WarGod.Unit
local WarGodControl = WarGod.Control


local pairs = pairs
local InCombatLockdown = InCombatLockdown
local GetShapeshiftForm = GetShapeshiftForm

--------------------------
local function TankingSomething()
    local threat = UnitThreatSituation("player")
    if threat then
        return threat >= 2
    end
end

setfenv(1, Rotations)



local baseScore = 80000
do
    AddSpellFunction(nil,"Innervate",18100, {
        func = function(self) return InCombatLockdown()--[[ and Delegates:HealCDWrapper(self.spell, player, {})]]
        end,
        units = groups.targetable,
        andDelegates = {Delegates.IsSpellInRange, Delegates.InnervateRaid, Delegates.NoInnervate, Delegates.HealCDWrapper},
        label = "Innervate",
        helpharm = "help",
        maxRange = 45,
        IsUsable = function(self) return talent.innervate.enabled end,
    })

    local nonGuardianSpecs = {"Balance", "Feral", "Restoration"}
    for _,spec in pairs(nonGuardianSpecs) do
        --[[AddSpellFunction(spec,"Nothing",baseScore,{
            -- using stacks because it avoids checking a function
            func = function(self) return buff.bear_form:Stacks() > 0
            end,
            units = groups.noone,
            label = "Stay in Bear Form"
        })]]


        AddSpellFunction(spec,"Frenzied Regeneration",baseScore + 900,{
            func = function(self)
                if not talent.frenzied_regeneration.enabled then return end
                return buff.frenzied_regeneration:Stacks() == 0 and (player.health_percent < 0.5 or player.health_percent < 0.75 and Delegates:UnitUnderXPercentHealthPredictedDamage(self.spell, player, {percent = 0.75})) and (not Delegates:FriendlyBlacklistWrapper(self.spell, player, {}))
            end,
            units = groups.noone,
            label = "Regen Affinity",
            quick = true,
            IsUsable = function(self) return GetShapeshiftForm() == 1 and player.rage >= 10 end,
        })


        AddSpellFunction(spec,"Thrash",baseScore + 600,{
            func = function(self)
                if GetShapeshiftForm() == 1 then
                    local reqEnemies = 1
                    if WarGodUnit.active_enemies >= reqEnemies then

                        local someoneNeedsThrash = false
                        local numEnemies = 0
                        for guid,unit in upairs(groups.targetableOrPlates) do
                            if Delegates:IsSpellInRange("Mangle", unit, {}) and (not Delegates:AoeBlacklistedWrapper(self.spell, unit, {})) then
                                if unit:DebuffRemaining("Thrash", "HARMFUL|PLAYER") < 3.6 then
                                    someoneNeedsThrash = true
                                end
                                numEnemies = numEnemies + 1
                            end
                            --WarGodUnit:GetTarget():DebuffRemaining("Thrash", "HARMFUL|PLAYER") < 3.6 and Delegates:IsSpellInRange("Rake", WarGodUnit:GetTarget())  and Delegates:NotDotBlacklistedWrapper(self.spell, WarGodUnit:GetTarget())
                        end
                        if someoneNeedsThrash and (numEnemies >= reqEnemies) then
                            return true
                        end
                    end
                end
            end,
            units = groups.noone,
            label = "Thrash Bloodtalons",
            quick = true,
            helpharm = "harm",
            maxRange = 11,
            IsUsable = function(self) return GetShapeshiftForm() == 2 and (buff.clearcasting.up or player.energy >= 40) or GetShapeshiftForm() == 1 end,
        })



        AddSpellFunction(spec,"Ironfur",baseScore + 500,{
            func = function(self)
                return player.rage >= 40 and TankingSomething() and (buff.ironfur:Remains() < 0.1 or talent.heart_of_the_wild.enabled and buff.heart_of_the_wild:Up())
            end,
            units = groups.noone,
            label = "Ironfur Affinity",
            IsUsable = function(self) return GetShapeshiftForm() == 1 and player.rage >= 40 end,
        })

        AddSpellFunction(spec,"Mangle",baseScore + 400,{
            func = function(self) return true end,
            units = groups.targetable,
            label = "Mangle",
            andDelegates = {Delegates.IsSpellInRange},
            helpharm = "harm",
            maxRange =15,
            IsUsable = function(self) return GetShapeshiftForm() == 1 end,
        })
    end
end